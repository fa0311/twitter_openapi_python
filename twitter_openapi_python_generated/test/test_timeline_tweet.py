# coding: utf-8

"""
    Twitter OpenAPI

    Twitter OpenAPI(Swagger) specification

    The version of the OpenAPI document: 0.0.1
    Contact: yuki@yuki0311.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from twitter_openapi_python_generated.models.timeline_tweet import TimelineTweet

class TestTimelineTweet(unittest.TestCase):
    """TimelineTweet unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TimelineTweet:
        """Test TimelineTweet
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TimelineTweet`
        """
        model = TimelineTweet()
        if include_optional:
            return TimelineTweet(
                typename = 'TimelineTweet',
                has_moderated_replies = True,
                highlights = twitter_openapi_python_generated.models.highlight.Highlight(
                    text_highlights = [
                        twitter_openapi_python_generated.models.text_highlight.TextHighlight(
                            end_index = 56, 
                            start_index = 56, )
                        ], ),
                item_type = 'TimelineTweet',
                promoted_metadata = { },
                social_context = None,
                tweet_display_type = 'Tweet',
                tweet_results = twitter_openapi_python_generated.models.item_result.ItemResult(
                    __typename = 'TimelineTweet', 
                    result = null, )
            )
        else:
            return TimelineTweet(
                typename = 'TimelineTweet',
                item_type = 'TimelineTweet',
                tweet_display_type = 'Tweet',
                tweet_results = twitter_openapi_python_generated.models.item_result.ItemResult(
                    __typename = 'TimelineTweet', 
                    result = null, ),
        )
        """

    def testTimelineTweet(self):
        """Test TimelineTweet"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
