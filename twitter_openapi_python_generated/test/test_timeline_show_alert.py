# coding: utf-8

"""
    Twitter OpenAPI

    Twitter OpenAPI(Swagger) specification

    The version of the OpenAPI document: 0.0.1
    Contact: yuki@yuki0311.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import twitter_openapi_python_generated
from twitter_openapi_python_generated.models.timeline_show_alert import TimelineShowAlert  # noqa: E501
from twitter_openapi_python_generated.rest import ApiException

class TestTimelineShowAlert(unittest.TestCase):
    """TimelineShowAlert unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test TimelineShowAlert
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TimelineShowAlert`
        """
        model = twitter_openapi_python_generated.models.timeline_show_alert.TimelineShowAlert()  # noqa: E501
        if include_optional :
            return TimelineShowAlert(
                alert_type = 'NewTweets', 
                color_config = { }, 
                display_duration_ms = 56, 
                display_location = 'Top', 
                icon_display_info = { }, 
                rich_text = twitter_openapi_python_generated.models.timeline_show_alert_rich_text.TimelineShowAlert_richText(
                    entities = [
                        { }
                        ], 
                    text = '', ), 
                trigger_delay_ms = 56, 
                type = 'TimelineAddEntries', 
                users_results = [
                    twitter_openapi_python_generated.models.user_results.UserResults(
                        result = null, )
                    ]
            )
        else :
            return TimelineShowAlert(
                rich_text = twitter_openapi_python_generated.models.timeline_show_alert_rich_text.TimelineShowAlert_richText(
                    entities = [
                        { }
                        ], 
                    text = '', ),
                type = 'TimelineAddEntries',
                users_results = [
                    twitter_openapi_python_generated.models.user_results.UserResults(
                        result = null, )
                    ],
        )
        """

    def testTimelineShowAlert(self):
        """Test TimelineShowAlert"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
