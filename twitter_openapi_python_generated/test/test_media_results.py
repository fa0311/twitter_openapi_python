# coding: utf-8

"""
    Twitter OpenAPI

    Twitter OpenAPI(Swagger) specification

    The version of the OpenAPI document: 0.0.1
    Contact: yuki@yuki0311.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from twitter_openapi_python_generated.models.media_results import MediaResults

class TestMediaResults(unittest.TestCase):
    """MediaResults unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MediaResults:
        """Test MediaResults
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MediaResults`
        """
        model = MediaResults()
        if include_optional:
            return MediaResults(
                result = twitter_openapi_python_generated.models.media_result.MediaResult(
                    grok_image_annotation = twitter_openapi_python_generated.models.grok_image_annotation.GrokImageAnnotation(
                        prompt = '', 
                        upsampled_prompt = '', ), 
                    media_key = '', )
            )
        else:
            return MediaResults(
                result = twitter_openapi_python_generated.models.media_result.MediaResult(
                    grok_image_annotation = twitter_openapi_python_generated.models.grok_image_annotation.GrokImageAnnotation(
                        prompt = '', 
                        upsampled_prompt = '', ), 
                    media_key = '', ),
        )
        """

    def testMediaResults(self):
        """Test MediaResults"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
