# coding: utf-8

"""
    Twitter OpenAPI

    Twitter OpenAPI(Swagger) specification

    The version of the OpenAPI document: 0.0.1
    Contact: yuki@yuki0311.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from twitter_openapi_python_generated.models.tweet_preview_display import TweetPreviewDisplay

class TestTweetPreviewDisplay(unittest.TestCase):
    """TweetPreviewDisplay unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TweetPreviewDisplay:
        """Test TweetPreviewDisplay
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TweetPreviewDisplay`
        """
        model = TweetPreviewDisplay()
        if include_optional:
            return TweetPreviewDisplay(
                typename = 'TimelineTweet',
                cta = twitter_openapi_python_generated.models.tweet_preview_display_cta.TweetPreviewDisplayCta(
                    title = '', 
                    url = twitter_openapi_python_generated.models.tweet_preview_display_cta_url.TweetPreviewDisplayCtaUrl(
                        url = '', 
                        url_type = 'DeepLink', ), ),
                limited_action_results = twitter_openapi_python_generated.models.tweet_limited_action_results.TweetLimitedActionResults(
                    limited_actions = [
                        twitter_openapi_python_generated.models.limited_action_results_data.LimitedActionResultsData(
                            action = 'Reply', )
                        ], ),
                tweet = twitter_openapi_python_generated.models.tweet_preview_display_tweet.TweetPreviewDisplayTweet(
                    bookmark_count = 56, 
                    core = twitter_openapi_python_generated.models.user_result_core.UserResultCore(
                        user_results = twitter_openapi_python_generated.models.user_results.UserResults(
                            result = null, ), ), 
                    created_at = 'Sat Dec 31 23:59:59 +0000 2023', 
                    entities = twitter_openapi_python_generated.models.entities.entities(), 
                    favorite_count = 56, 
                    quote_count = 56, 
                    reply_count = 56, 
                    rest_id = '4', 
                    retweet_count = 56, 
                    text = '', 
                    view_count = twitter_openapi_python_generated.models.tweet_preview_display_tweet_view_count.TweetPreviewDisplayTweetViewCount(
                        count = '4', ), )
            )
        else:
            return TweetPreviewDisplay(
                typename = 'TimelineTweet',
                cta = twitter_openapi_python_generated.models.tweet_preview_display_cta.TweetPreviewDisplayCta(
                    title = '', 
                    url = twitter_openapi_python_generated.models.tweet_preview_display_cta_url.TweetPreviewDisplayCtaUrl(
                        url = '', 
                        url_type = 'DeepLink', ), ),
                limited_action_results = twitter_openapi_python_generated.models.tweet_limited_action_results.TweetLimitedActionResults(
                    limited_actions = [
                        twitter_openapi_python_generated.models.limited_action_results_data.LimitedActionResultsData(
                            action = 'Reply', )
                        ], ),
                tweet = twitter_openapi_python_generated.models.tweet_preview_display_tweet.TweetPreviewDisplayTweet(
                    bookmark_count = 56, 
                    core = twitter_openapi_python_generated.models.user_result_core.UserResultCore(
                        user_results = twitter_openapi_python_generated.models.user_results.UserResults(
                            result = null, ), ), 
                    created_at = 'Sat Dec 31 23:59:59 +0000 2023', 
                    entities = twitter_openapi_python_generated.models.entities.entities(), 
                    favorite_count = 56, 
                    quote_count = 56, 
                    reply_count = 56, 
                    rest_id = '4', 
                    retweet_count = 56, 
                    text = '', 
                    view_count = twitter_openapi_python_generated.models.tweet_preview_display_tweet_view_count.TweetPreviewDisplayTweetViewCount(
                        count = '4', ), ),
        )
        """

    def testTweetPreviewDisplay(self):
        """Test TweetPreviewDisplay"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
