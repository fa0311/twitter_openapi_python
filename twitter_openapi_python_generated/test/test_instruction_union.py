# coding: utf-8

"""
    Twitter OpenAPI

    Twitter OpenAPI(Swagger) specification

    The version of the OpenAPI document: 0.0.1
    Contact: yuki@yuki0311.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from twitter_openapi_python_generated.models.instruction_union import InstructionUnion

class TestInstructionUnion(unittest.TestCase):
    """InstructionUnion unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InstructionUnion:
        """Test InstructionUnion
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InstructionUnion`
        """
        model = InstructionUnion()
        if include_optional:
            return InstructionUnion(
                entries = [
                    twitter_openapi_python_generated.models.timeline_add_entry.TimelineAddEntry(
                        content = null, 
                        entry_id = '25375e030fccba00917317c574773100bf03b5f', 
                        sort_index = '4', )
                    ],
                type = 'TimelineAddEntries',
                module_entry_id = '',
                module_items = [
                    twitter_openapi_python_generated.models.module_item.ModuleItem(
                        dispensable = True, 
                        entry_id = '25375e030fccba00917317c574773100bf03b5f', 
                        item = twitter_openapi_python_generated.models.module_entry.ModuleEntry(
                            client_event_info = twitter_openapi_python_generated.models.client_event_info.ClientEventInfo(
                                component = '', 
                                details = { }, 
                                element = '', ), 
                            feedback_info = twitter_openapi_python_generated.models.feedback_info.FeedbackInfo(
                                feedback_keys = [
                                    ''
                                    ], ), 
                            item_content = null, ), )
                    ],
                prepend = True,
                entry = twitter_openapi_python_generated.models.timeline_add_entry.TimelineAddEntry(
                    content = null, 
                    entry_id = '25375e030fccba00917317c574773100bf03b5f', 
                    sort_index = '4', ),
                entry_id_to_replace = '',
                alert_type = 'NewTweets',
                color_config = { },
                display_duration_ms = 56,
                display_location = 'Top',
                icon_display_info = { },
                rich_text = twitter_openapi_python_generated.models.timeline_show_alert_rich_text.TimelineShowAlert_richText(
                    entities = [
                        { }
                        ], 
                    text = '', ),
                trigger_delay_ms = 56,
                users_results = [
                    twitter_openapi_python_generated.models.user_results.UserResults(
                        result = null, )
                    ],
                direction = 'Top',
                client_event_info = twitter_openapi_python_generated.models.client_event_info.ClientEventInfo(
                    component = '', 
                    details = { }, 
                    element = '', ),
                cover = twitter_openapi_python_generated.models.timeline_half_cover.TimelineHalfCover(
                    dismissible = True, 
                    half_cover_display_type = 'Cover', 
                    impression_callbacks = [
                        twitter_openapi_python_generated.models.callback.Callback(
                            endpoint = '', )
                        ], 
                    primary_cover_cta = twitter_openapi_python_generated.models.cover_cta.CoverCta(
                        text = '', 
                        button_style = 'Primary', 
                        callbacks = [
                            twitter_openapi_python_generated.models.callback.Callback(
                                endpoint = '', )
                            ], 
                        client_event_info = twitter_openapi_python_generated.models.cta_client_event_info.CtaClientEventInfo(
                            action = 'primary_cta', ), 
                        cta_behavior = twitter_openapi_python_generated.models.timeline_cover_behavior.TimelineCoverBehavior(
                            type = 'TimelineCoverBehaviorDismiss', 
                            url = null, ), ), 
                    primary_text = twitter_openapi_python_generated.models.text.Text(
                        entities = [
                            twitter_openapi_python_generated.models.text_entity.TextEntity(
                                from_index = 56, 
                                ref = twitter_openapi_python_generated.models.text_entity_ref.TextEntityRef(
                                    type = 'TimelineUrl', 
                                    url = '', 
                                    url_type = 'ExternalUrl', ), 
                                to_index = 56, )
                            ], 
                        text = '', ), 
                    secondary_text = twitter_openapi_python_generated.models.text.Text(
                        entities = [
                            twitter_openapi_python_generated.models.text_entity.TextEntity(
                                from_index = 56, 
                                ref = twitter_openapi_python_generated.models.text_entity_ref.TextEntityRef(
                                    type = 'TimelineUrl', 
                                    url = '', 
                                    url_type = 'ExternalUrl', ), 
                                to_index = 56, )
                            ], 
                        text = '', ), 
                    type = 'TimelineHalfCover', )
            )
        else:
            return InstructionUnion(
                entries = [
                    twitter_openapi_python_generated.models.timeline_add_entry.TimelineAddEntry(
                        content = null, 
                        entry_id = '25375e030fccba00917317c574773100bf03b5f', 
                        sort_index = '4', )
                    ],
                type = 'TimelineAddEntries',
                module_entry_id = '',
                module_items = [
                    twitter_openapi_python_generated.models.module_item.ModuleItem(
                        dispensable = True, 
                        entry_id = '25375e030fccba00917317c574773100bf03b5f', 
                        item = twitter_openapi_python_generated.models.module_entry.ModuleEntry(
                            client_event_info = twitter_openapi_python_generated.models.client_event_info.ClientEventInfo(
                                component = '', 
                                details = { }, 
                                element = '', ), 
                            feedback_info = twitter_openapi_python_generated.models.feedback_info.FeedbackInfo(
                                feedback_keys = [
                                    ''
                                    ], ), 
                            item_content = null, ), )
                    ],
                entry = twitter_openapi_python_generated.models.timeline_add_entry.TimelineAddEntry(
                    content = null, 
                    entry_id = '25375e030fccba00917317c574773100bf03b5f', 
                    sort_index = '4', ),
                entry_id_to_replace = '',
                rich_text = twitter_openapi_python_generated.models.timeline_show_alert_rich_text.TimelineShowAlert_richText(
                    entities = [
                        { }
                        ], 
                    text = '', ),
                users_results = [
                    twitter_openapi_python_generated.models.user_results.UserResults(
                        result = null, )
                    ],
                direction = 'Top',
                client_event_info = twitter_openapi_python_generated.models.client_event_info.ClientEventInfo(
                    component = '', 
                    details = { }, 
                    element = '', ),
                cover = twitter_openapi_python_generated.models.timeline_half_cover.TimelineHalfCover(
                    dismissible = True, 
                    half_cover_display_type = 'Cover', 
                    impression_callbacks = [
                        twitter_openapi_python_generated.models.callback.Callback(
                            endpoint = '', )
                        ], 
                    primary_cover_cta = twitter_openapi_python_generated.models.cover_cta.CoverCta(
                        text = '', 
                        button_style = 'Primary', 
                        callbacks = [
                            twitter_openapi_python_generated.models.callback.Callback(
                                endpoint = '', )
                            ], 
                        client_event_info = twitter_openapi_python_generated.models.cta_client_event_info.CtaClientEventInfo(
                            action = 'primary_cta', ), 
                        cta_behavior = twitter_openapi_python_generated.models.timeline_cover_behavior.TimelineCoverBehavior(
                            type = 'TimelineCoverBehaviorDismiss', 
                            url = null, ), ), 
                    primary_text = twitter_openapi_python_generated.models.text.Text(
                        entities = [
                            twitter_openapi_python_generated.models.text_entity.TextEntity(
                                from_index = 56, 
                                ref = twitter_openapi_python_generated.models.text_entity_ref.TextEntityRef(
                                    type = 'TimelineUrl', 
                                    url = '', 
                                    url_type = 'ExternalUrl', ), 
                                to_index = 56, )
                            ], 
                        text = '', ), 
                    secondary_text = twitter_openapi_python_generated.models.text.Text(
                        entities = [
                            twitter_openapi_python_generated.models.text_entity.TextEntity(
                                from_index = 56, 
                                ref = twitter_openapi_python_generated.models.text_entity_ref.TextEntityRef(
                                    type = 'TimelineUrl', 
                                    url = '', 
                                    url_type = 'ExternalUrl', ), 
                                to_index = 56, )
                            ], 
                        text = '', ), 
                    type = 'TimelineHalfCover', ),
        )
        """

    def testInstructionUnion(self):
        """Test InstructionUnion"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
