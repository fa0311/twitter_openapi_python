# coding: utf-8

"""
    Twitter OpenAPI

    Twitter OpenAPI(Swagger) specification

    The version of the OpenAPI document: 0.0.1
    Contact: yuki@yuki0311.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from twitter_openapi_python_generated.models.notifications_timeline_data import NotificationsTimelineData

class TestNotificationsTimelineData(unittest.TestCase):
    """NotificationsTimelineData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NotificationsTimelineData:
        """Test NotificationsTimelineData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NotificationsTimelineData`
        """
        model = NotificationsTimelineData()
        if include_optional:
            return NotificationsTimelineData(
                viewer_v2 = twitter_openapi_python_generated.models.notifications_viewer_v2.NotificationsViewerV2(
                    user_results = twitter_openapi_python_generated.models.notifications_user_results.NotificationsUserResults(
                        result = twitter_openapi_python_generated.models.notifications_result.NotificationsResult(
                            __typename = 'TimelineTweet', 
                            notification_timeline = twitter_openapi_python_generated.models.timeline_result.TimelineResult(
                                id = '', 
                                timeline = twitter_openapi_python_generated.models.timeline.Timeline(
                                    instructions = [
                                        null
                                        ], 
                                    metadata = { }, 
                                    response_objects = { }, ), ), 
                            rest_id = '4', ), ), )
            )
        else:
            return NotificationsTimelineData(
                viewer_v2 = twitter_openapi_python_generated.models.notifications_viewer_v2.NotificationsViewerV2(
                    user_results = twitter_openapi_python_generated.models.notifications_user_results.NotificationsUserResults(
                        result = twitter_openapi_python_generated.models.notifications_result.NotificationsResult(
                            __typename = 'TimelineTweet', 
                            notification_timeline = twitter_openapi_python_generated.models.timeline_result.TimelineResult(
                                id = '', 
                                timeline = twitter_openapi_python_generated.models.timeline.Timeline(
                                    instructions = [
                                        null
                                        ], 
                                    metadata = { }, 
                                    response_objects = { }, ), ), 
                            rest_id = '4', ), ), ),
        )
        """

    def testNotificationsTimelineData(self):
        """Test NotificationsTimelineData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
